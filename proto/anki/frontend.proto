// Copyright: Ankitects Pty Ltd and contributors
// License: GNU AGPL, version 3 or later; http://www.gnu.org/licenses/agpl.html

syntax = "proto3";

option java_multiple_files = true;

package anki.frontend;

import "anki/scheduler.proto";
import "anki/generic.proto";
import "anki/search.proto";
import "anki/notes.proto";
import "anki/import_export.proto";

service FrontendService {
  // Returns values from the reviewer
  rpc GetSchedulingStatesWithContext(generic.Empty)
      returns (SchedulingStatesWithContext);
  // Updates reviewer state
  rpc SetSchedulingStates(SetSchedulingStatesRequest) returns (generic.Empty);

  // Notify Qt layer so window modality can be updated.
  rpc ImportDone(generic.Empty) returns (generic.Empty);

  rpc SearchInBrowser(search.SearchNode) returns (generic.Empty);

  // Get an export location chosen by the user
  rpc GetExportFilePath(ExportFilePathRequest) returns (generic.String);

  // Retrieve note ids to include in export file
  rpc GetNotesToExport(generic.Empty) returns (notes.NoteIds);

  // Show a tooltip in the main window
  rpc ShowTooltip(generic.String) returns (generic.Empty);

  rpc TemporarilyCloseAndExportCollectionPackage(
      import_export.ExportCollectionPackageRequest) returns (generic.Empty);
}

service BackendFrontendService {}

message SchedulingStatesWithContext {
  scheduler.SchedulingStates states = 1;
  scheduler.SchedulingContext context = 2;
}

message SetSchedulingStatesRequest {
  string key = 1;
  scheduler.SchedulingStates states = 2;
}

message ExportFilePathRequest {
  string exporter = 1;
  string extension = 2;
  string filename = 3;
}
