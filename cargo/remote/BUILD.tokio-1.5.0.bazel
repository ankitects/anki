"""
@generated
cargo-raze crate build file.

DO NOT EDIT! Replaced on runs of cargo-raze
"""

# buildifier: disable=load
load("@bazel_skylib//lib:selects.bzl", "selects")

# buildifier: disable=load
load(
    "@rules_rust//rust:rust.bzl",
    "rust_binary",
    "rust_library",
    "rust_test",
)

package(default_visibility = [
    # Public for visibility by "@raze__crate__version//" targets.
    #
    # Prefer access through "//cargo", which limits external
    # visibility to explicit Cargo.toml dependencies.
    "//visibility:public",
])

licenses([
    "notice",  # MIT from expression "MIT"
])

# Generated Targets
# buildifier: disable=out-of-order-load
# buildifier: disable=load-on-top
load(
    "@rules_rust//cargo:cargo_build_script.bzl",
    "cargo_build_script",
)

cargo_build_script(
    name = "tokio_build_script",
    srcs = glob(["**/*.rs"]),
    build_script_env = {
    },
    crate_features = [
        "bytes",
        "default",
        "fs",
        "io-util",
        "libc",
        "memchr",
        "mio",
        "net",
        "num_cpus",
        "rt",
        "rt-multi-thread",
        "sync",
        "time",
    ],
    crate_root = "build.rs",
    data = glob(["**"]),
    edition = "2018",
    rustc_flags = [
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-raze",
        "manual",
    ],
    version = "1.5.0",
    visibility = ["//visibility:private"],
    deps = [
        "@raze__autocfg__1_0_1//:autocfg",
    ] + selects.with_or({
        # cfg(unix)
        (
            "@rules_rust//rust/platform:aarch64-apple-ios",
            "@rules_rust//rust/platform:aarch64-unknown-linux-gnu",
            "@rules_rust//rust/platform:x86_64-apple-darwin",
            "@rules_rust//rust/platform:x86_64-apple-ios",
            "@rules_rust//rust/platform:x86_64-unknown-linux-gnu",
        ): [
        ],
        "//conditions:default": [],
    }) + selects.with_or({
        # cfg(windows)
        (
            "@rules_rust//rust/platform:x86_64-pc-windows-msvc",
        ): [
        ],
        "//conditions:default": [],
    }),
)

rust_library(
    name = "tokio",
    srcs = glob(["**/*.rs"]),
    aliases = {
    },
    crate_features = [
        "bytes",
        "default",
        "fs",
        "io-util",
        "libc",
        "memchr",
        "mio",
        "net",
        "num_cpus",
        "rt",
        "rt-multi-thread",
        "sync",
        "time",
    ],
    crate_root = "src/lib.rs",
    crate_type = "lib",
    data = [],
    edition = "2018",
    rustc_flags = [
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-raze",
        "manual",
    ],
    version = "1.5.0",
    # buildifier: leave-alone
    deps = [
        ":tokio_build_script",
        "@raze__bytes__1_0_1//:bytes",
        "@raze__memchr__2_4_0//:memchr",
        "@raze__mio__0_7_11//:mio",
        "@raze__num_cpus__1_13_0//:num_cpus",
        "@raze__pin_project_lite__0_2_6//:pin_project_lite",
    ] + selects.with_or({
        # cfg(unix)
        (
            "@rules_rust//rust/platform:aarch64-apple-ios",
            "@rules_rust//rust/platform:aarch64-unknown-linux-gnu",
            "@rules_rust//rust/platform:x86_64-apple-darwin",
            "@rules_rust//rust/platform:x86_64-apple-ios",
            "@rules_rust//rust/platform:x86_64-unknown-linux-gnu",
        ): [
            "@raze__libc__0_2_94//:libc",
        ],
        "//conditions:default": [],
    }) + selects.with_or({
        # cfg(windows)
        (
            "@rules_rust//rust/platform:x86_64-pc-windows-msvc",
        ): [
        ],
        "//conditions:default": [],
    }),
)

# Unsupported target "_require_full" with type "test" omitted

# Unsupported target "async_send_sync" with type "test" omitted

# Unsupported target "buffered" with type "test" omitted

# Unsupported target "fs" with type "test" omitted

# Unsupported target "fs_copy" with type "test" omitted

# Unsupported target "fs_dir" with type "test" omitted

# Unsupported target "fs_file" with type "test" omitted

# Unsupported target "fs_file_mocked" with type "test" omitted

# Unsupported target "fs_link" with type "test" omitted

# Unsupported target "io_async_fd" with type "test" omitted

# Unsupported target "io_async_read" with type "test" omitted

# Unsupported target "io_chain" with type "test" omitted

# Unsupported target "io_copy" with type "test" omitted

# Unsupported target "io_copy_bidirectional" with type "test" omitted

# Unsupported target "io_driver" with type "test" omitted

# Unsupported target "io_driver_drop" with type "test" omitted

# Unsupported target "io_lines" with type "test" omitted

# Unsupported target "io_mem_stream" with type "test" omitted

# Unsupported target "io_read" with type "test" omitted

# Unsupported target "io_read_buf" with type "test" omitted

# Unsupported target "io_read_exact" with type "test" omitted

# Unsupported target "io_read_line" with type "test" omitted

# Unsupported target "io_read_to_end" with type "test" omitted

# Unsupported target "io_read_to_string" with type "test" omitted

# Unsupported target "io_read_until" with type "test" omitted

# Unsupported target "io_split" with type "test" omitted

# Unsupported target "io_take" with type "test" omitted

# Unsupported target "io_write" with type "test" omitted

# Unsupported target "io_write_all" with type "test" omitted

# Unsupported target "io_write_buf" with type "test" omitted

# Unsupported target "io_write_int" with type "test" omitted

# Unsupported target "macros_join" with type "test" omitted

# Unsupported target "macros_pin" with type "test" omitted

# Unsupported target "macros_select" with type "test" omitted

# Unsupported target "macros_test" with type "test" omitted

# Unsupported target "macros_try_join" with type "test" omitted

# Unsupported target "net_bind_resource" with type "test" omitted

# Unsupported target "net_lookup_host" with type "test" omitted

# Unsupported target "no_rt" with type "test" omitted

# Unsupported target "process_issue_2174" with type "test" omitted

# Unsupported target "process_issue_42" with type "test" omitted

# Unsupported target "process_kill_on_drop" with type "test" omitted

# Unsupported target "process_smoke" with type "test" omitted

# Unsupported target "rt_basic" with type "test" omitted

# Unsupported target "rt_common" with type "test" omitted

# Unsupported target "rt_handle_block_on" with type "test" omitted

# Unsupported target "rt_threaded" with type "test" omitted

# Unsupported target "signal_ctrl_c" with type "test" omitted

# Unsupported target "signal_drop_recv" with type "test" omitted

# Unsupported target "signal_drop_rt" with type "test" omitted

# Unsupported target "signal_drop_signal" with type "test" omitted

# Unsupported target "signal_multi_rt" with type "test" omitted

# Unsupported target "signal_no_rt" with type "test" omitted

# Unsupported target "signal_notify_both" with type "test" omitted

# Unsupported target "signal_twice" with type "test" omitted

# Unsupported target "signal_usr1" with type "test" omitted

# Unsupported target "sync_barrier" with type "test" omitted

# Unsupported target "sync_broadcast" with type "test" omitted

# Unsupported target "sync_errors" with type "test" omitted

# Unsupported target "sync_mpsc" with type "test" omitted

# Unsupported target "sync_mutex" with type "test" omitted

# Unsupported target "sync_mutex_owned" with type "test" omitted

# Unsupported target "sync_notify" with type "test" omitted

# Unsupported target "sync_once_cell" with type "test" omitted

# Unsupported target "sync_oneshot" with type "test" omitted

# Unsupported target "sync_rwlock" with type "test" omitted

# Unsupported target "sync_semaphore" with type "test" omitted

# Unsupported target "sync_semaphore_owned" with type "test" omitted

# Unsupported target "sync_watch" with type "test" omitted

# Unsupported target "task_abort" with type "test" omitted

# Unsupported target "task_blocking" with type "test" omitted

# Unsupported target "task_local" with type "test" omitted

# Unsupported target "task_local_set" with type "test" omitted

# Unsupported target "tcp_accept" with type "test" omitted

# Unsupported target "tcp_connect" with type "test" omitted

# Unsupported target "tcp_echo" with type "test" omitted

# Unsupported target "tcp_into_split" with type "test" omitted

# Unsupported target "tcp_into_std" with type "test" omitted

# Unsupported target "tcp_peek" with type "test" omitted

# Unsupported target "tcp_shutdown" with type "test" omitted

# Unsupported target "tcp_socket" with type "test" omitted

# Unsupported target "tcp_split" with type "test" omitted

# Unsupported target "tcp_stream" with type "test" omitted

# Unsupported target "test_clock" with type "test" omitted

# Unsupported target "time_interval" with type "test" omitted

# Unsupported target "time_pause" with type "test" omitted

# Unsupported target "time_rt" with type "test" omitted

# Unsupported target "time_sleep" with type "test" omitted

# Unsupported target "time_timeout" with type "test" omitted

# Unsupported target "udp" with type "test" omitted

# Unsupported target "uds_cred" with type "test" omitted

# Unsupported target "uds_datagram" with type "test" omitted

# Unsupported target "uds_split" with type "test" omitted

# Unsupported target "uds_stream" with type "test" omitted
