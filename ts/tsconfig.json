{
    "include": [],
    "exclude": ["node_modules"],
    "references": [
        { "path": "components" },
        { "path": "congrats" },
        { "path": "deck-options" },
        { "path": "editable" },
        { "path": "editor" },
        { "path": "graphs" },
        { "path": "html-filter" },
        { "path": "reviewer" },
        { "path": "lib" },
        { "path": "mathjax" },
        { "path": "domlib" },
        { "path": "sveltelib" },
        { "path": "icons" }
    ],
    "compilerOptions": {
        "declaration": true,
        "composite": true,
        "target": "es2019",
        "module": "es2020",
        "lib": [
            "es2017",
            "es2018.intl",
            "es2018.promise",
            "es2019.array",
            "es2019.object",
            "es2019.string",
            "es2020.promise",
            "dom",
            "dom.iterable"
        ],
        // uncomment for building with tsc directly
        // "outDir": "dist",
        "rootDir": "..",
        "rootDirs": [
            ".",
            // for VS code and svelte-check
            "../.bazel/bin/ts"
        ],
        "baseUrl": ".",
        "paths": {},
        "types": [],
        "importsNotUsedAsValues": "error",
        /* Strict Type-Checking Options */
        "strict": true /* Enable all strict type-checking options. */,
        "noImplicitAny": false /* Raise error on expressions and declarations with an implied 'any' type. */,
        "strictNullChecks": true /* Enable strict null checks. */,
        "strictFunctionTypes": true /* Enable strict checking of function types. */,
        "strictBindCallApply": true /* Enable strict 'bind', 'call', and 'apply' methods on functions. */,
        "strictPropertyInitialization": true /* Enable strict checking of property initialization in classes. */,
        "noImplicitThis": true /* Raise error on 'this' expressions with an implied 'any' type. */,
        "alwaysStrict": true /* Parse in strict mode and emit "use strict" for each source file. */,
        /* Module Resolution Options */
        "moduleResolution": "node" /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */,
        "allowSyntheticDefaultImports": true /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */,
        "esModuleInterop": true /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */,
        "jsx": "react",
        "noEmitHelpers": true,
        "importHelpers": true
    }
}
