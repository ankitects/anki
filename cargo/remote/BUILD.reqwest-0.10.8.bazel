"""
@generated
cargo-raze crate build file.

DO NOT EDIT! Replaced on runs of cargo-raze
"""

# buildifier: disable=load
load(
    "@io_bazel_rules_rust//rust:rust.bzl",
    "rust_binary",
    "rust_library",
    "rust_test",
)

# buildifier: disable=load
load("@bazel_skylib//lib:selects.bzl", "selects")

package(default_visibility = [
    # Public for visibility by "@raze__crate__version//" targets.
    #
    # Prefer access through "//cargo", which limits external
    # visibility to explicit Cargo.toml dependencies.
    "//visibility:public",
])

licenses([
    "notice",  # MIT from expression "MIT OR Apache-2.0"
])

# Generated Targets

# Unsupported target "blocking" with type "example" omitted

# Unsupported target "form" with type "example" omitted

# Unsupported target "json_dynamic" with type "example" omitted

# Unsupported target "json_typed" with type "example" omitted

# Unsupported target "simple" with type "example" omitted

# Unsupported target "tor_socks" with type "example" omitted

rust_library(
    name = "reqwest",
    srcs = glob(["**/*.rs"]),
    aliases = {
        "@raze__native_tls__0_2_7//:native_tls": "native_tls_crate",
    },
    crate_features = [
        "__rustls",
        "__tls",
        "default-tls",
        "hyper-rustls",
        "hyper-tls",
        "json",
        "native-tls",
        "native-tls-crate",
        "rustls",
        "rustls-tls",
        "rustls-tls-webpki-roots",
        "serde_json",
        "socks",
        "stream",
        "tokio-rustls",
        "tokio-socks",
        "tokio-tls",
        "webpki-roots",
    ],
    crate_root = "src/lib.rs",
    crate_type = "lib",
    data = [],
    edition = "2018",
    rustc_flags = [
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-raze",
        "manual",
    ],
    version = "0.10.8",
    # buildifier: leave-alone
    deps = [
        "@raze__bytes__0_5_6//:bytes",
        "@raze__http__0_2_2//:http",
        "@raze__hyper_timeout__0_3_1//:hyper_timeout",
        "@raze__mime_guess__2_0_3//:mime_guess",
        "@raze__serde__1_0_118//:serde",
        "@raze__serde_json__1_0_61//:serde_json",
        "@raze__serde_urlencoded__0_6_1//:serde_urlencoded",
        "@raze__url__2_2_0//:url",
    ] + selects.with_or({
        # cfg(not(target_arch = "wasm32"))
        (
            "@io_bazel_rules_rust//rust/platform:aarch64-apple-ios",
            "@io_bazel_rules_rust//rust/platform:aarch64-unknown-linux-gnu",
            "@io_bazel_rules_rust//rust/platform:x86_64-apple-darwin",
            "@io_bazel_rules_rust//rust/platform:x86_64-apple-ios",
            "@io_bazel_rules_rust//rust/platform:x86_64-pc-windows-msvc",
            "@io_bazel_rules_rust//rust/platform:x86_64-unknown-linux-gnu",
        ): [
            "@raze__base64__0_13_0//:base64",
            "@raze__encoding_rs__0_8_26//:encoding_rs",
            "@raze__futures_core__0_3_8//:futures_core",
            "@raze__futures_util__0_3_8//:futures_util",
            "@raze__http_body__0_3_1//:http_body",
            "@raze__hyper__0_13_9//:hyper",
            "@raze__hyper_rustls__0_21_0//:hyper_rustls",
            "@raze__hyper_tls__0_4_3//:hyper_tls",
            "@raze__ipnet__2_3_0//:ipnet",
            "@raze__lazy_static__1_4_0//:lazy_static",
            "@raze__log__0_4_11//:log",
            "@raze__mime__0_3_16//:mime",
            "@raze__native_tls__0_2_7//:native_tls",
            "@raze__percent_encoding__2_1_0//:percent_encoding",
            "@raze__pin_project_lite__0_1_11//:pin_project_lite",
            "@raze__rustls__0_18_1//:rustls",
            "@raze__tokio__0_2_24//:tokio",
            "@raze__tokio_rustls__0_14_1//:tokio_rustls",
            "@raze__tokio_socks__0_3_0//:tokio_socks",
            "@raze__tokio_tls__0_3_1//:tokio_tls",
            "@raze__webpki_roots__0_20_0//:webpki_roots",
        ],
        "//conditions:default": [],
    }) + selects.with_or({
        # cfg(windows)
        (
            "@io_bazel_rules_rust//rust/platform:x86_64-pc-windows-msvc",
        ): [
            "@raze__winreg__0_7_0//:winreg",
        ],
        "//conditions:default": [],
    }),
)

# Unsupported target "badssl" with type "test" omitted

# Unsupported target "blocking" with type "test" omitted

# Unsupported target "brotli" with type "test" omitted

# Unsupported target "client" with type "test" omitted

# Unsupported target "cookie" with type "test" omitted

# Unsupported target "gzip" with type "test" omitted

# Unsupported target "multipart" with type "test" omitted

# Unsupported target "proxy" with type "test" omitted

# Unsupported target "redirect" with type "test" omitted

# Unsupported target "timeouts" with type "test" omitted
