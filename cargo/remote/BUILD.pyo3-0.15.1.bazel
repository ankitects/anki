"""
@generated
cargo-raze crate build file.

DO NOT EDIT! Replaced on runs of cargo-raze
"""

# buildifier: disable=load
load("@bazel_skylib//lib:selects.bzl", "selects")

# buildifier: disable=load
load(
    "@rules_rust//rust:defs.bzl",
    "rust_binary",
    "rust_library",
    "rust_proc_macro",
    "rust_test",
)

package(default_visibility = [
    # Public for visibility by "@raze__crate__version//" targets.
    #
    # Prefer access through "//cargo", which limits external
    # visibility to explicit Cargo.toml dependencies.
    "//visibility:public",
])

licenses([
    "notice",  # Apache-2.0 from expression "Apache-2.0"
])

# Generated Targets
# buildifier: disable=out-of-order-load
# buildifier: disable=load-on-top
load(
    "@rules_rust//cargo:cargo_build_script.bzl",
    "cargo_build_script",
)

cargo_build_script(
    name = "pyo3_build_script",
    srcs = glob(["**/*.rs"]),
    build_script_env = {
    },
    crate_features = [
        "abi3",
        "abi3-py310",
        "abi3-py39",
        "default",
        "extension-module",
        "indoc",
        "macros",
        "paste",
        "pyo3-macros",
        "unindent",
    ],
    crate_root = "build.rs",
    data = glob(["**"]),
    edition = "2018",
    links = "python",
    rustc_flags = [
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-raze",
        "manual",
    ],
    version = "0.15.1",
    visibility = ["//visibility:private"],
    deps = [
        "@raze__pyo3_build_config__0_15_1//:pyo3_build_config",
    ],
)

# Unsupported target "bench_call" with type "bench" omitted

# Unsupported target "bench_dict" with type "bench" omitted

# Unsupported target "bench_err" with type "bench" omitted

# Unsupported target "bench_gil" with type "bench" omitted

# Unsupported target "bench_list" with type "bench" omitted

# Unsupported target "bench_pyclass" with type "bench" omitted

# Unsupported target "bench_pyobject" with type "bench" omitted

# Unsupported target "bench_set" with type "bench" omitted

# Unsupported target "bench_tuple" with type "bench" omitted

rust_library(
    name = "pyo3",
    srcs = glob(["**/*.rs"]),
    crate_features = [
        "abi3",
        "abi3-py310",
        "abi3-py39",
        "default",
        "extension-module",
        "indoc",
        "macros",
        "paste",
        "pyo3-macros",
        "unindent",
    ],
    crate_root = "src/lib.rs",
    data = [],
    compile_data = glob(["**/*.md"]),
    edition = "2018",
    proc_macro_deps = [
        "@raze__pyo3_macros__0_15_1//:pyo3_macros",
    ],
    rustc_flags = [
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-raze",
        "crate-name=pyo3",
        "manual",
    ],
    version = "0.15.1",
    # buildifier: leave-alone
    deps = [
        ":pyo3_build_script",
        "@raze__cfg_if__1_0_0//:cfg_if",
        "@raze__indoc__0_3_6//:indoc",
        "@raze__libc__0_2_120//:libc",
        "@raze__parking_lot__0_11_2//:parking_lot",
        "@raze__paste__0_1_18//:paste",
        "@raze__unindent__0_1_8//:unindent",
    ],
)

# Unsupported target "common" with type "test" omitted

# Unsupported target "test_anyhow" with type "test" omitted

# Unsupported target "test_arithmetics" with type "test" omitted

# Unsupported target "test_arithmetics_protos" with type "test" omitted

# Unsupported target "test_buffer" with type "test" omitted

# Unsupported target "test_buffer_protocol" with type "test" omitted

# Unsupported target "test_bytes" with type "test" omitted

# Unsupported target "test_class_attributes" with type "test" omitted

# Unsupported target "test_class_basics" with type "test" omitted

# Unsupported target "test_class_conversion" with type "test" omitted

# Unsupported target "test_class_new" with type "test" omitted

# Unsupported target "test_compile_error" with type "test" omitted

# Unsupported target "test_datetime" with type "test" omitted

# Unsupported target "test_dict_iter" with type "test" omitted

# Unsupported target "test_exceptions" with type "test" omitted

# Unsupported target "test_frompyobject" with type "test" omitted

# Unsupported target "test_gc" with type "test" omitted

# Unsupported target "test_getter_setter" with type "test" omitted

# Unsupported target "test_hygiene" with type "test" omitted

# Unsupported target "test_inheritance" with type "test" omitted

# Unsupported target "test_macros" with type "test" omitted

# Unsupported target "test_mapping" with type "test" omitted

# Unsupported target "test_methods" with type "test" omitted

# Unsupported target "test_module" with type "test" omitted

# Unsupported target "test_multiple_pymethods" with type "test" omitted

# Unsupported target "test_not_msrv" with type "test" omitted

# Unsupported target "test_proto_methods" with type "test" omitted

# Unsupported target "test_py36_init" with type "test" omitted

# Unsupported target "test_pyfunction" with type "test" omitted

# Unsupported target "test_pyproto" with type "test" omitted

# Unsupported target "test_pyself" with type "test" omitted

# Unsupported target "test_sequence" with type "test" omitted

# Unsupported target "test_serde" with type "test" omitted

# Unsupported target "test_string" with type "test" omitted

# Unsupported target "test_text_signature" with type "test" omitted

# Unsupported target "test_unsendable_dict" with type "test" omitted

# Unsupported target "test_variable_arguments" with type "test" omitted

# Unsupported target "test_various" with type "test" omitted

# Unsupported target "test_wrap_pyfunction_deduction" with type "test" omitted
