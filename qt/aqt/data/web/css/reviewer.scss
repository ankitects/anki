/* Copyright: Ankitects Pty Ltd and contributors
 * License: GNU AGPL, version 3 or later; http://www.gnu.org/licenses/agpl.html */

@use 'ts/sass/vars';
@use 'ts/sass/scrollbar';

// reviewer does not use any buttons, but
// it was included in the old webview.css
@use 'ts/sass/buttons';

// we keep the old behaviour for now to avoid breaking
// add-ons/card templates
* {
  box-sizing: content-box;
}

hr {
    background-color: #ccc;
}

a {
    color: var(--link);
    text-decoration: none;
}

body {
    font-family: Helvetica, Arial;
    color: var(--text-fg);
    background: var(--window-bg);
    margin: 20px;
    overflow-wrap: break-word;
    transition: opacity 0.5s ease-out;
    overscroll-behavior: none;
}

// explicit nightMode definition required
// to override default .card styling
body.nightMode {
    background-color: var(--window-bg);
    color: var(--text-fg);
}

img {
    max-width: 95%;
    max-height: 95vh;
}

#_flag {
    position: fixed;
    right: 10px;
    top: 0;
    font-size: 30px;
    display: none;
    -webkit-text-stroke-width: 1px;
    -webkit-text-stroke-color: black;
}

#_mark {
    position: fixed;
    left: 10px;
    top: 0;
    font-size: 30px;
    color: yellow;
    display: none;
    -webkit-text-stroke-width: 1px;
    -webkit-text-stroke-color: black;
}

#typeans {
    width: 100%;
    // https://anki.tenderapp.com/discussions/beta-testing/1854-using-margin-auto-causes-horizontal-scrollbar-on-typesomething
    box-sizing: border-box;
}

.typeGood {
    background: #0f0;
}

.typeBad {
    background: #f00;
}

.typeMissed {
    background: #ccc;
}

.replay-button {
    text-decoration: none;
    display: inline-flex;
    vertical-align: middle;
    margin: 3px;

    svg {
        width: 40px;
        height: 40px;

        circle {
            fill: #fff;
            stroke: #414141;
        }

        path {
            fill: #414141;
        }
    }
}

.drawing {
    zoom: 50%;
}

.nightMode {
    @include scrollbar.night-mode;

    .latex {
        filter: invert(100%);
    }

    .drawing {
        filter: unquote("invert(1) hue-rotate(180deg)")
    }
}

