[package]
name = "anki_workspace"
version = "0.0.0"
authors = ["Ankitects Pty Ltd and contributors"]
license = "AGPL-3.0-or-later"

[workspace]
members = ["rslib", "rslib/i18n", "rslib/i18n_helpers", "rslib/linkchecker", "pylib/rsbridge"]
exclude = ["qt/bundle"]

[lib]
# dummy top level for tooling
name = "anki"
path = "rslib/empty.rs"

[package.metadata.raze]
workspace_path = "//cargo"
package_aliases_dir = "cargo"
rust_rules_workspace_name = "rules_rust"

# pull requests that add other targets (eg Arm Linux, FreeBSD) welcome - you'll
# need to update platforms/, BUILD.request.bazel and pylib/anki/BUILD.bazel as
# well.
targets = [
    "x86_64-apple-darwin",
    "x86_64-apple-ios",
    "x86_64-pc-windows-msvc",
    "x86_64-unknown-linux-gnu",
    "aarch64-apple-darwin",
    "aarch64-apple-ios",
    "aarch64-unknown-linux-gnu",
]
genmode = "Remote"
default_gen_buildrs = true

[package.metadata.raze.crates.pyo3.'*']
compile_data_attr = "glob([\"**/*.md\"])"

[package.metadata.raze.crates.ring.'*']
compile_data_attr = "glob([\"src/**/*.der\"])"

[package.metadata.raze.crates.webpki.'*']
compile_data_attr = "glob([\"src/**/*.der\"])"

[package.metadata.raze.crates.unic-ucd-version.'*']
compile_data_attr = "glob([\"**/*.rsv\"])"

[package.metadata.raze.crates.unic-ucd-category.'*']
compile_data_attr = "glob([\"**/*.rsv\"])"

[package.metadata.raze.crates.pyo3-build-config.'*']
buildrs_additional_environment_variables = { "PYO3_NO_PYTHON" = "1" }

[patch.crates-io]
reqwest = { git="https://github.com/ankitects/reqwest.git", rev="7591444614de02b658ddab125efba7b2bb4e2335" }
