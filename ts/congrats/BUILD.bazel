load("@build_bazel_rules_svelte//:defs.bzl", "svelte")
load("@npm//@bazel/typescript:index.bzl", "ts_library")
load("@npm//@bazel/rollup:index.bzl", "rollup_bundle")
load("//ts:prettier.bzl", "prettier_test")
load("//ts:eslint.bzl", "eslint_test")
load("//ts:svelte.bzl", "svelte_check")

svelte(
    name = "CongratsPage",
    entry_point = "CongratsPage.svelte",
)

ts_library(
    name = "bootstrap",
    srcs = ["bootstrap.ts"],
    deps = [
        "CongratsPage",
        "lib",
        "//ts/lib",
        "@npm//svelte2tsx",
    ],
)

ts_library(
    name = "lib",
    srcs = ["lib.ts"],
    deps = [
        "//ts/lib",
        "//ts/lib:backend_proto",
    ],
)

rollup_bundle(
    name = "congrats",
    config_file = "//ts:rollup.config.js",
    entry_point = "bootstrap.ts",
    format = "iife",
    link_workspace_root = True,
    silent = True,
    sourcemap = "false",
    visibility = ["//visibility:public"],
    deps = [
        "CongratsPage",
        "bootstrap",
        "//ts/lib",
        "@npm//@rollup/plugin-commonjs",
        "@npm//@rollup/plugin-node-resolve",
        "@npm//rollup-plugin-terser",
    ],
)

exports_files(["congrats.html"])

# Tests
################

prettier_test(
    name = "format_check",
    srcs = glob([
        "*.ts",
        "*.svelte",
    ]),
)

eslint_test(
    name = "eslint",
    srcs = glob([
        "*.ts",
    ]),
)

svelte_check(
    name = "svelte_check",
    srcs = glob([
        "*.ts",
        "*.svelte",
    ]),
)
